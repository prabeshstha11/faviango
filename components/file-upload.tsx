/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/aDFucFbMyb8
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */
"use client";
import { Card, CardContent, CardFooter } from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { useEffect, useRef, useState } from "react";
import { Cross2Icon } from "@radix-ui/react-icons";

export function FileUpload() {
    const [image, setImage] = useState<File | null>(null);
    const imageRef = useRef<HTMLInputElement>(null);

    const [link, setLink] = useState<HTMLAnchorElement | null>(null);

    const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        const file = event.target.files?.[0] || null;
        setImage(file);
    };

    const removeImage = () => {
        setImage(null);
        if (imageRef.current) {
            imageRef.current.value = "";
        }
    };

    useEffect(() => {
        if (image) {
            const canvas = document.createElement("canvas");
            const ctx: CanvasRenderingContext2D | null = canvas.getContext("2d");

            const size = 32;
            canvas.width = size;
            canvas.height = size;

            const img: HTMLImageElement = new Image();
            img.src = URL.createObjectURL(image);

            img.onload = () => {
                if (ctx) {
                    ctx.drawImage(img, 0, 0, size, size);
                    canvas.toBlob((blob) => {
                        if (blob) {
                            const icoFile = new File([blob], "favicon.ico", { type: "image/x-icon" });
                            const link = document.createElement("a");
                            link.href = URL.createObjectURL(icoFile);
                            // link.download = "favicon.ico";
                            setLink(link);
                            // link.click();
                            console.log(link);

                            const faviconLink = document.querySelector("link[rel='icon']") as HTMLLinkElement;
                            if (faviconLink) {
                                faviconLink.href = link.href;
                            } else {
                                const newFaviconLink = document.createElement("link");
                                newFaviconLink.rel = "icon";
                                newFaviconLink.href = link.href;
                                document.head.appendChild(newFaviconLink);
                            }
                        }
                    }, "image/x-icon");
                }
            };
        }
    }, [image]);

    const convertToFavicon = () => {
        if (link) {
            link.download = "favicon.ico";
            link.click();
        }
    };

    return (
        <Card>
            <CardContent className="p-6 space-y-4">
                <div className="border-2 border-dashed border-gray-200 rounded-lg p-3 flex flex-col gap-5">
                    <div className="space-y-2 text-sm">
                        <Label htmlFor="file" className="font-medium text-xl">
                            Convert to Favicon
                        </Label>
                        <Input ref={imageRef} id="file" type="file" placeholder="File" accept="image/*" onChange={handleFileChange} />
                    </div>
                    {image && (
                        <div className="relative w-48">
                            <img src={URL.createObjectURL(image)} alt="Uploaded" className="w-full h-auto relative" />
                            <div className="absolute h-6 w-6 -top-3 -right-3 rounded-full flex items-center justify-center bg-red-500 text-white cursor-pointer" onClick={removeImage}>
                                <Cross2Icon />
                            </div>
                        </div>
                    )}
                </div>
            </CardContent>

            <CardFooter>
                <Button size="lg" onClick={convertToFavicon}>
                    Download
                </Button>
            </CardFooter>
        </Card>
    );
}

function FileIcon(props: React.SVGProps<SVGSVGElement>) {
    return (
        <svg {...props} xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
            <path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z" />
            <path d="M14 2v4a2 2 0 0 0 2 2h4" />
        </svg>
    );
}
